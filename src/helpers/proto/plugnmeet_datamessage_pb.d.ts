// @generated by protoc-gen-es v0.0.10 with parameter "target=js+dts"
// @generated from file plugnmeet_datamessage.proto (package plugnmeet, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';

/**
 * @generated from enum plugnmeet.DataMsgType
 */
export declare enum DataMsgType {
  /**
   * @generated from enum value: USER = 0;
   */
  USER = 0,

  /**
   * @generated from enum value: SYSTEM = 1;
   */
  SYSTEM = 1,

  /**
   * @generated from enum value: WHITEBOARD = 2;
   */
  WHITEBOARD = 2,
}

/**
 * @generated from enum plugnmeet.DataMsgBodyType
 */
export declare enum DataMsgBodyType {
  /**
   * SYSTEM type
   *
   * @generated from enum value: RAISE_HAND = 0;
   */
  RAISE_HAND = 0,

  /**
   * @generated from enum value: LOWER_HAND = 1;
   */
  LOWER_HAND = 1,

  /**
   * @generated from enum value: OTHER_USER_LOWER_HAND = 2;
   */
  OTHER_USER_LOWER_HAND = 2,

  /**
   * @generated from enum value: FILE_UPLOAD = 3;
   */
  FILE_UPLOAD = 3,

  /**
   * @generated from enum value: INFO = 4;
   */
  INFO = 4,

  /**
   * @generated from enum value: ALERT = 5;
   */
  ALERT = 5,

  /**
   * @generated from enum value: SEND_CHAT_MSGS = 6;
   */
  SEND_CHAT_MSGS = 6,

  /**
   * @generated from enum value: RENEW_TOKEN = 7;
   */
  RENEW_TOKEN = 7,

  /**
   * @generated from enum value: UPDATE_LOCK_SETTINGS = 8;
   */
  UPDATE_LOCK_SETTINGS = 8,

  /**
   * @generated from enum value: INIT_WHITEBOARD = 9;
   */
  INIT_WHITEBOARD = 9,

  /**
   * @generated from enum value: USER_VISIBILITY_CHANGE = 10;
   */
  USER_VISIBILITY_CHANGE = 10,

  /**
   * @generated from enum value: EXTERNAL_MEDIA_PLAYER_EVENTS = 11;
   */
  EXTERNAL_MEDIA_PLAYER_EVENTS = 11,

  /**
   * @generated from enum value: POLL_CREATED = 12;
   */
  POLL_CREATED = 12,

  /**
   * @generated from enum value: NEW_POLL_RESPONSE = 13;
   */
  NEW_POLL_RESPONSE = 13,

  /**
   * @generated from enum value: POLL_CLOSED = 14;
   */
  POLL_CLOSED = 14,

  /**
   * @generated from enum value: JOIN_BREAKOUT_ROOM = 15;
   */
  JOIN_BREAKOUT_ROOM = 15,

  /**
   * USER type
   *
   * @generated from enum value: CHAT = 16;
   */
  CHAT = 16,

  /**
   * WHITEBOARD type
   *
   * @generated from enum value: SCENE_UPDATE = 17;
   */
  SCENE_UPDATE = 17,

  /**
   * @generated from enum value: POINTER_UPDATE = 18;
   */
  POINTER_UPDATE = 18,

  /**
   * @generated from enum value: ADD_WHITEBOARD_FILE = 19;
   */
  ADD_WHITEBOARD_FILE = 19,

  /**
   * @generated from enum value: ADD_WHITEBOARD_OFFICE_FILE = 20;
   */
  ADD_WHITEBOARD_OFFICE_FILE = 20,

  /**
   * @generated from enum value: PAGE_CHANGE = 21;
   */
  PAGE_CHANGE = 21,
}

/**
 * @generated from message plugnmeet.DataMessage
 */
export declare class DataMessage extends Message<DataMessage> {
  /**
   * @generated from field: plugnmeet.DataMsgType type = 1;
   */
  type: DataMsgType;

  /**
   * @generated from field: optional string message_id = 2;
   */
  messageId?: string;

  /**
   * @generated from field: string room_sid = 3;
   */
  roomSid: string;

  /**
   * @generated from field: string room_id = 4;
   */
  roomId: string;

  /**
   * @generated from field: optional string to = 5;
   */
  to?: string;

  /**
   * @generated from field: plugnmeet.DataMsgBody body = 6;
   */
  body?: DataMsgBody;

  constructor(data?: PartialMessage<DataMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'plugnmeet.DataMessage';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): DataMessage;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): DataMessage;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): DataMessage;

  static equals(
    a: DataMessage | PlainMessage<DataMessage> | undefined,
    b: DataMessage | PlainMessage<DataMessage> | undefined,
  ): boolean;
}

/**
 * @generated from message plugnmeet.DataMsgBody
 */
export declare class DataMsgBody extends Message<DataMsgBody> {
  /**
   * @generated from field: plugnmeet.DataMsgBodyType type = 1;
   */
  type: DataMsgBodyType;

  /**
   * @generated from field: optional string message_id = 2;
   */
  messageId?: string;

  /**
   * @generated from field: optional string time = 3;
   */
  time?: string;

  /**
   * @generated from field: plugnmeet.DataMsgReqFrom from = 4;
   */
  from?: DataMsgReqFrom;

  /**
   * @generated from field: string msg = 5;
   */
  msg: string;

  /**
   * @generated from field: optional uint32 is_private = 6;
   */
  isPrivate?: number;

  constructor(data?: PartialMessage<DataMsgBody>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'plugnmeet.DataMsgBody';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): DataMsgBody;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): DataMsgBody;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): DataMsgBody;

  static equals(
    a: DataMsgBody | PlainMessage<DataMsgBody> | undefined,
    b: DataMsgBody | PlainMessage<DataMsgBody> | undefined,
  ): boolean;
}

/**
 * @generated from message plugnmeet.DataMsgReqFrom
 */
export declare class DataMsgReqFrom extends Message<DataMsgReqFrom> {
  /**
   * @generated from field: string sid = 1;
   */
  sid: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: optional string name = 3;
   */
  name?: string;

  constructor(data?: PartialMessage<DataMsgReqFrom>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'plugnmeet.DataMsgReqFrom';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): DataMsgReqFrom;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): DataMsgReqFrom;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): DataMsgReqFrom;

  static equals(
    a: DataMsgReqFrom | PlainMessage<DataMsgReqFrom> | undefined,
    b: DataMsgReqFrom | PlainMessage<DataMsgReqFrom> | undefined,
  ): boolean;
}
